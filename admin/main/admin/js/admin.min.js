"use strict";

var Service , Path , Hapi ;
/**
 * hilmacs service main object
 * created to allow property , object , function re-usability
 * and allow easy function calling
*/
   Service = new Object();
/**
 * hilmacs path object contains / defines standard
 * system/application url , uri's and fttp paths
*/
   Path    = new Object();
/**
 * hilmacs hapi {h=>hilmacs,api=>application programmers interface}
 * this object listens to requests inform of parameters
 * from client or a hilmacs developer
 * and provides results as a JSON object
*/
   Hapi    = new Object();

/**
 * array cabin.
*/
 Service.array   = new Array();
/**
* Convert an Array-like object to a real Array.
*/
   Service.array.toArray = (list, start) => {
     start = start || 0;
     var i = list.length - start;
     var ret = new Array(i);
     while (i--) {
       ret[i] = list[i + start];
     }
     return ret ;
   }

/**
 * hilmacs merge arrays of equal length
 * and return an object
*/
 Service.array.merge = (z,w) => {
   if (z.length === w.length) {
     var a = {};//isEmptyObject
     for(var i=0; i < z.length; i++) {
         a[z[i]] = w[i];
     }
     return a ;
   }else {
     return null ;
   }
 }
 /**
  * hilmacs filter
 */
 Service.filter = new Object();
 /**
  * hilmacs remove the last ',' from would be hilmacs Objects
  * passed in by the user as data
 */
 Service.filter.strings = (x,y) => {
    //return x.replace(y, /\s*$/, null );;
 }
/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
Service.isObject = (obj) => {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value e.g. [object Object]
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

/**
 * Convert a value to a string that is actually rendered.
 */
Service.toString =  (val) => {
  return val == null
    ? ''
    : typeof val === 'object'
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert a input value to a number for persistence.
 * If the conversion fails, return original string.
 */
Service.toNumber =  (val) => {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
Service.makeMap =  (str,expectsLowerCase ) => {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = Service.makeMap('slot,component', true);

/**
 * Check if a attribute is a reserved attribute.
 */
var isReservedAttribute = Service.makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array
 */
Service.chopFromArray = (arr, item) => {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1) ;
    }
  }
}
/**
 * hilmacs standard api gateways
*/
Hapi.gateway = {
	local : 'https://estateserver-5e37ae72f4d9.herokuapp.com' ,
	secure: '/secure/hapi/' ,
	web   : '',
  cdn   : ''
}
/**
 * hilmacs authentication protocols
*/
Hapi.authenticate = {
	secret : null ,
	key    : {
		public  : null ,
		private : null
	} ,
	environment : {
     development : true ,
		 production  : false
	}
}
/**
 * hilmacs hapi's standard gate request path
*/
Path.gate = (x,y,z) => {
	if (y == 'secure' ) {
	return  Hapi.gateway.secure + x +  z ;
	} else if (y == 'web') {
		return  Hapi.gateway.web + x +  z  ;
	}else if (y == 'cdn') {
	return  Hapi.gateway.cdn  ;
	}else{
		return  Hapi.gateway.local + x +  z  ;
	}
}
/**
 * check if object empty
*/
Service.isEmptyObject = (x) => {
	if (jQuery.isEmptyObject(x)) {
		return false;
	}else {
		return true;
	}
}

// hilmacs account main container
Service.account = {
  create : null ,
  admin : {
   
    profile   : null,
  } ,
  student : {
    profile : null
  }
}

// Cookies
Service.hcwr = (name, value, days) => {
		if (days) {
				var date = new Date();
				date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
				var expires = "; expires=" + date.toGMTString();
		}
		else var expires = "";

		document.cookie = name + "=" + value + expires + "; path=/";
}

Service.hcr = (name) => {
		var nameEQ = name + "=";
		var ca = document.cookie.split(';');
		for (var i = 0; i < ca.length; i++) {
				var c = ca[i];
				while (c.charAt(0) == ' ') c = c.substring(1, c.length);
				if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
		}
		return null;
}

Service.hcdel = (name) => {
	 return Service.hcwr(name, null , -1);
}

Service.redirect = (pg,x= null ) => {
   if (x) {
     return window.location.reload();
   }else {
     return document.location.href = pg ;
   }
}

Service.modals = new Object();

/**
 * hilmacs default warning modal
*/
Service.modals.warn = (a,x,y) => {
  $('#hm-modal-warn-'+a).modal('show');
  $('.hm-modal-warn-body').html(x);//body
  $('#hm-modal-warn-hd').html(y);//head
  setInterval( () => {
     $('#hm-modal-warn').modal('hide');
  } , 10000);
}

Service.css = new Object();
//color
Service.css.color = (x,y) => {
   switch (x) {
     case 'red':
         return `<span class="redText">${y}</span>`;
       break;
     case 'green':
         return `<span class="greenText">${y}</span>`;
       break;
     default:
       return `<span class="redText">${y}</span>`;
   }
}

Service.css.transform = (x,y) => {
   switch (x) {
     case 'cap':
         return y.toUpperCase();
       break;
     case 'low':
         return y.toLowerCase();
       break;
     default:
       return x;
   }
}

$(document).ready( () => {

  /**
   * some nice walk in
  */
  $('tr').addClass('animated fadeIn');
  
  Service.hideElem = (a) => {  $("."+a+"").hide('slow'); }

  //show elements
  Service.showElem = (a) => {  $("."+a+"").show('slow'); }

  //write html into element
  Service.html  = (a,b) => {  $(""+a+"").html(`${b}`); }

  //write abbr in full
  Service.abbr = ({
     lang: { en:'English', cn:'Chineese', fr:'French', kws:'Swahili', sa:'Afrikaana', su:'Sudaneese', zb:'Shona' },
     country:{ug:'Uganda',cn:'China',ky:'Kenya',sa:'South Africa',su:'Sunda',zb:'Zimbabwe',fr:'France',en:'Great Britain'}
  });

$.ajaxSetup({
    headers: {
        'Content-Type':'application/json',
        'authorization': 'Bearer superadmin'
    }
});

$.getScript('/js/map.js');
$.getScript('/js/api.js');

Service.showMap = (position,id,inp_id,prop_id) => {
  try{
    console.log(position,id,inp_id,prop_id)

    if(position !== undefined && position){
      if(prop_id !== undefined &&  prop_id){
        $("#property-id").val(prop_id)
		//console.log(document.getElementById(prop_id))
      }
      position = position.split(":")
      position = {lat:position[0],lng:position[1]}
      if(position.lat && position.lng && position.lat > 0 && position.lng > 0){
        Service.initMap(position,id,null)
      }else{Service.initMap(null,id,inp_id)}
    }else{
      Service.initMap(null,id,inp_id)
    }
    
    
  }catch(e){
    console.log(e);
  }
 
}

const server_url = "https://estateserver-5e37ae72f4d9.herokuapp.com/"

Service.showProperty = (id) =>{
	console.log("show",id)
	$.getJSON(Path.gate('/properties',null,'/'+id),  (data) => {
		//$(".eml").empty() // clear all HTML in the div before we start printing chat messages
		//console.log("property",data)
		if (jQuery.isEmptyObject(data)) {
			 //console.log('yes');
			 // $('.all-products').empty();
		}else{
			//console.log(data)
			const property = data.data
			console.log("property=>",property)
			$("#property-id").val(property.property_id)
			$("#property-detail").show()
			$('.show-detail').html(`
				Showing Property <br>
				<div class="container">
					<div class="card">
						<div class="card-body">
							<h3 class="card-title">${property.name}</h3>
							<h6 class="card-subtitle">${property.address}</h6>
							<div class="row">
								<div class="col-lg-5 col-md-5 col-sm-6">
									<input type="file" id='property-image' style="display:none;">
									<div class="white-box text-center" id="property-image-view">
									${property.images.length > 0 ? 
										`
										<img id="previewImage" src="${property.images[0].replace('http://localhost:8000/',server_url)}" alt="Image" class="img-responsive"/>		
										`
									: `<img id="previewImage" src="https://www.bootdey.com/image/430x600/00CED1/000000" class="img-responsive">`
									}
									
									</div>
								</div>
								<div class="col-lg-7 col-md-7 col-sm-6">
									<h4 class="box-title mt-5">Property description</h4>
									<p>${property.description}</p>
									<h2 class="mt-5">
										${property.currency} ${property.price}
									</h2>
									<button class="btn btn-dark btn-rounded mr-1 property-add-image" onclick='document.getElementById("property-image").click()' data-toggle="tooltip" title="" data-original-title="Edit Property">
										Edit <i class="fa fa-pencil"></i>
									</button>
									<button class="btn btn-primary btn-rounded delete-property" onclick="service.deleteProperty('${property.property_id}')">Delete property</button>
									<button type="button" data-toggle="modal" data-target="#property-map" onclick="Service.showMap('${property.position.lat+":"+property.position.lng}','map','property-position','${property.property_id}')" class="btn btn-sm btn-success" >View in Map</button>
									<h3 class="box-title mt-5">Key Features</h3>
									${property.features ? 
										`<ul class="list-unstyled">
											${property.features.map(item =>
												`<li><i class="fa fa-check text-success"></i>${item}</li>`
											).join('')}
											
										</ul>`
									: '<p>No Features</p>'}
									
								</div>
								<div class="col-lg-12 col-md-12 col-sm-12">
									<h3 class="box-title mt-5">Current Orders</h3>
									<div class="table-responsive">
										<table class="table table-striped table-product">
											<tbody>
												<tr>
													<th width="390">User</th>
													<th>Status</th>
												</tr>
												${property.orders ? 
													`<tbody>
														${property.orders.map(order => `<tr><td>${order.book_id}</td><td>${order.status}</td></tr>`).join('')}
													</tbody>`
												: '<p>No Orders</p>'}
												
												
											</tbody>
										</table>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			`);
			$('.owl-carousel').owlCarousel({
			  loop:true,
			  margin:10,
			  nav:true,
			  responsive:{
				  0:{
					  items:1
				  },
				  
			  }
			});
		}
	})
}

$('#property-add-image').click(function(){
	$("#property-image").click()
})

$('.property-image').click(function(event){
	const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                $('#previewImage').attr('src', e.target.result).show();
            };
            reader.readAsDataURL(file);
        } else {
				$('#previewImage').attr('src', 'https://www.bootdey.com/image/430x600/00CED1/000000').show();
           // $('#previewImage').hide();
        }
})

$('.view-property').click(function(e){
	console.log(e)
	Service.showProperty(e.target.id)
})


$('.delete-property').click(function(e){
	console.log(e)
	Service.showProperty(e.target.id)
})


		jQuery.ajaxSettings.traditional = true ;
     // SET GLOBALS
		 // enable PUT,DELETE
		 jQuery.each( [ "put", "delete","patch" ], function( i, method ) {
			  jQuery[ method ] = function( url, data, callback, type ) {
			    if ( jQuery.isFunction( data ) ) {
			      type = type || callback;
			      callback = data;
			      data = undefined;
			    }

			    return jQuery.ajax({
			      url: url,
			      type: method,
			      dataType: type,
			      data: data,
			      success: callback
			    });
			  };
			});

			// hilmacs default comment
      $( ".print" ).click( () => {
         // hilmacs default comment
          window.print();
      });
	  Service.hcwr('loaderIcon_sm' , "<img class='img' src='/img/loaders/saving.png'>" , 360);

    $( ".gen-report" ).click( () => {
      
       window.print();
   });
	  
	  $( ".hm-btn-modal-e1" ).click( () => {
         // hilmacs default comment
         let position = $('#property-position').val();
         position = position.split(":")
				 var x = ({
					 name:$('.property-name').val(),
           address:$('.property-address').val(),
           position:{lat:position[0],lng:position[1]},
           type:$('.property-type').val(),
           price:$('.property-price').val(),
           features:$('.property-features').val().split(","),
           currency:$('.property-currency').val(),
					 description:$('.property-description').val(),
				
			   });
			   console.log("data",x)
         
			   //return
				 if (x.name && x.address && x.type && x.currency && x.price) {
           $.post(Path.gate('/properties',null,'/'), JSON.stringify(x) ).done( (data) => {
            console.log(data)
            if(data.data.property_id){
              $("#property-map").show();
              $("#property-id").val(data.data.property_id)
              Service.showMap(null,"map","property-position",null);
            }
            Service.Products();
           });
				 } else {
          alert("missing data");
				 }
     });

		 // hilmacs default comment
     $( ".property-add-address" ).click( () => {
         // hilmacs default comment
         let position = $('#property-position').val();
				 var x = ({
					 property_id:$('#property-id').val(),
					 position:{lat:position.split(":")[0],lng:position.split(":")[1]}
			   });
         console.log(x);
				 if (x.property_id) {
           $.patch(Path.gate('/properties',null,'/'+x.property_id), JSON.stringify(x) ).done( ()=> {
           	 Service.Products();
			 $("#property-map").hide()
           });
		   
				 } else {
          alert("missing data");
				 }
     });

     $( ".property-edit-image" ).click( () => {
		let files = []
		
        let position = $('#property-position').val();
		const formData = new FormData();
			files.forEach((file) => {
			  formData.append('images', file, file.name);
			});
		let property_id = $('#property-id').val();
        var x = formData()
        console.log(x);
        if (property_id) {
			const headers = new Headers();
				headers.append('Authorization', 'Bearer superadmin'); 
				
				fetch(server_url+'properties/upload/images/'+property_id, {
				  method: 'POST',
				  headers: headers,
				  body: formData
				})
				.then(response => {
				  if (!response.ok) {
					throw new Error('Network response was not ok');
				  }
				  let data = response.json();
				})
        console.log("upload",data)
			  Service.products()
        } else {
          alert("missing data");
        }
    });
    
	
	 $( ".hm-btn-modal-edit" ).click( () => {
         
				 var x = ({
					 name:$('.profile-name').val(),
					 email:$('.profile-email').val(),
					 country:$('.profile-country').val(),
					 year:$('.profile-year').val(),
					 category:$('.profile-category').val(),
					 address:$('.profile-address').val(),
					 state:$('.profile-state').val(),
					 code:$('.profile-code').val()
			   });
				 if (x.name) {
           $.post(Path.gate('/users',null,'/profile'), x ).done( (data)=> {
           	 console.log(data)
			 //location.reload()
           });
				 } else {
           alert(hmLang.locals('noChg'));
				 }
     });

	
})

Service.shuffleArray =  (array) => {
  var d = array.length, a, b;

  // While there remain elements to shuffle...
  while (0 !== d) {

    // Pick a remaining element...
    b = Math.floor(Math.random() * d);
    d -= 1;

    // And swap it with the current element.
    a = array[d];
    array[d] = array[b];
    array[b] = a;
  }

  return array;
}

// generate random number
Service.random = () => {
	 var random;
	 random = Math.ceil(Math.random() * 10000) + 2017; // {Togikwato year : in Uganda}
	 random = (Math.floor(Math.random() * 2) <= 0) ? -1*-(random) : random;
	 return random;
}

/**
 * major rand number for time slots
 * powerfull algorithim  dev on 11/14/2017 {2:14pm} by gates the great
 * the response must be 4-6 o 7-12 o 13-17 o 18-23 not 6-7 , 12-13 , 17-18
*/
Service.slotRandom = () => {
  var random ,x,y,z,p;
  random = Math.ceil(Math.random() * 25) ;
  random = (Math.floor(Math.random() * 2) <= 0) ? -1*-(random) : random;

  // dates
  p = Service.vars.array.date ;

  // shuffle thru dates
  z = Service.shuffleArray(p)[0];

  // don't allow interfaces with breaks
  if (random == 22 || random == 25 || random == 24 ) {
    random =  20 ;
  }else if (random == 6 || random == 2 ) {
    random = 5 ;
  }else if (random == 7 || random == 0 ) {
    random =  9 ;
  }else if (random == 12 || random == 4  ) {
    random =  11 ;
  }else if (random == 13 || random == 1 ) {
    random =  15 ;
  }else if (random == 17 || random == 3 ) {
    random =  21 ;
  }else if (random == 23 || random == 18) {
    random =  10 ;
  }

  var t = random + 1 ;
  var a = t + 1 ;
  var x = random - 1 ;
  var t = {slot1:x,slot2:random,slot3:t,slot4:a,day:z} ;
  return t ;
}

// set role path url
Service.createUrl = (a,b,c) => {
	var a = $('.'+a).val();
	var a = hmGlobals('siteMain')+Service.hcr('ccregno')+'/'+a ;
	$('.'+b).attr("value" , a );
	if(c !== '' ){
    $('.'+c).attr("value" , a );
	}
}

// val() are the same
function dupVal(a,b) {
	var a = $('.'+a).val();
	$('.'+b).attr("value" , a );
}

function virTalUsername(a,b) {
	var a = $('.'+a).val();
  var a = a.split(' ');
  $('.'+b).attr("value" , a[0]+'_'+Service.random() );
}

/**
 * hilmacs delete bubble
*/
// remove data globaly without animation
Service.delBubble = (b,a) => { // where{x=>path,z=>id}
  // hilmacs default comment
  $.delete(Path.gate(b,null,'/'+a)).always( () => {
     Service.html('.'+a+'_btn', Service.hcr('loaderIcon_sm') );
  }).done( () => {
    // control view
    setInterval(function () {
      $('.'+a+'_off').hide(2000);
    }, 2000);
  }).fail( () => {
    alert('Deletion failed');
  });
}

// --bring href to life on element
function hmHref(a) {
    return Service.redirect(a) ;
}

//prevent default
Service.prevDefault = (x) => {
  $( ''+x+'' ).submit(function( event ) {
     event.preventDefault();
  });
}

//hilmace get value
Service.val = (x) => {
  return $(''+x+'').val();
}

// --check connectivity
Service.connect = new Object() ;
Service.connect.isConnected = () => {
  $.getJSON(Path.gate('connectivity',web,'check'), function(data) {
    if (jQuery.isEmptyObject(data)) {
       // clock out...
    }
 });
}